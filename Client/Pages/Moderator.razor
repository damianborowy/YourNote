@page "/moderator"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider ApiAuthenticationStateProvider
@inject HttpClient Http
@using YourNote.Shared.Models

@if (IsPermitted == null)
{
    <p><em>Wczytywanie...</em></p>
}
else if (IsPermitted.Value)
{
    <h1>Panel moderatorski</h1>
    <div class="d-flex flex-row">
        <ul class="flex-grow-1 pl-0 mb-0">
            @foreach (var user in users)
            {
                <li>
                    <a href="/notes/@user.Id">
                        @user.EmailAddress
                    </a>
                </li>
            }
        </ul>
        <div class="flex-grow-1">
        </div>
    </div>
}
else
{
    <p>
        Nie posiadasz wystarczających uprawnień by wyświetlić tą stronę.
    </p>
}

@code {
    bool? IsPermitted { get; set; } = null;
    IEnumerable<User> users = Array.Empty<User>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();
        var role = ClaimsParser.Select(authState, "role");

        if (role.Equals("Moderator")) IsPermitted = true;
        else return;

        users = await Http.GetJsonAsync<User[]>("/api/users");
    }
}