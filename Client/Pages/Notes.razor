@page "/notes/"
@page "/notes/{UserId}"
@using SharedModels = YourNote.Shared.Models
@inject HttpClient Http
@inject AuthenticationStateProvider ApiAuthenticationStateProvider
@using YourNote.Shared.Models
@using System.Text.Json

<div>
    @if (notes == null)
    {
        <p><em>Wczytywanie...</em></p>
    }
    else
    {
        @if (notesOwned.Count > 0)
        {
            <div style="margin-bottom: 2em;">
                <h5>Własne notatki</h5>
                <div class="wrapper">
                    @foreach (var note in notesOwned)
                    {
                        <Note NoteObj="@note" UserId="@UserId" @bind-Notes="notes" />
                    }
                </div>
            </div>
        }
        @if (notesShared.Count > 0) 
        {
            <div>
                <h5>Udostępnione mi notatki</h5>
                <div class="wrapper">
                    @foreach (var note in notesShared)
                    {
                        <Note NoteObj="@note" UserId="@UserId" @bind-Notes="notes" />
                    }
                </div>
            </div>
        }
    }
</div>

<NoteAdder UserId="@UserId" @bind-Notes="notes" />

@code {
    [Parameter]
    public string UserId { get; set; }

    List<SharedModels.NotePost> notes;
    List<SharedModels.NotePost> notesOwned = new List<SharedModels.NotePost>();
    List<SharedModels.NotePost> notesShared = new List<SharedModels.NotePost>();
    List<string> tags;
    List<string> lectures;

    protected override async Task OnInitializedAsync()
    {
        var authService = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();
        UserId = UserId ?? ClaimsParser.Select(authService, "nameid");

        notes = await Http.GetJsonAsync<List<SharedModels.NotePost>>($"api/notes/{UserId}");

        foreach (var note in notes)
        {
            if (note.Tags == null) note.Tags = new List<string>();
            if (note.Lectures == null) note.Lectures = new List<string>();
            if (note.SharesTo == null) note.SharesTo = new List<string>();
            
            if (note.OwnerId == null || note.OwnerId.Equals(UserId))
                notesOwned.Add(note);
            else
                notesShared.Add(note);
        }
    }
}