@page "/notes/"
@page "/notes/{UserId}"
@using SharedModels = YourNote.Shared.Models
@inject HttpClient Http
@inject AuthenticationStateProvider ApiAuthenticationStateProvider

<div class="wrapper">
    @if (notes == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        foreach (var note in notes)
        {
            <Note NoteObj="@note" UserId="@UserId" @bind-Notes="notes" Tags="@tags" Lectures="@lectures" />
        }
    }
</div>

<NoteAdder UserId="@UserId" @bind-Notes="notes" Tags="@tags" Lectures="@lectures" />

@code {
    [Parameter]
    public string UserId { get; set; }

    List<SharedModels.Note> notes;
    string[] tags = Array.Empty<string>();
    string[] lectures = Array.Empty<string>();

    protected override async Task OnInitializedAsync()
    {
        var authService = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();
        UserId = UserId ?? ClaimsParser.Select(authService, "id");

        notes = await Http.GetJsonAsync<List<SharedModels.Note>>($"api/notes/{UserId}");

        /* TEST DATA

        notes = new List<SharedModels.Note>()
        {
            new SharedModels.Note()
            {
                Title = "lalala",
                Content = "lelele",
                Color = 2
            }
        };

        tags = new string[]
        {
            "lalala",
            "someTag"
        };

        lectures = new string[]
        {
            "someValue",
            "someLecture"
        };

        */
    }
}