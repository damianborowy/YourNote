@inject AuthenticationStateProvider ApiAuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        @if (Role.Equals("Admin"))
        {
            <BSNavItem>
                <BSNavLink Href="/admin">
                    Panel administracyjny
                </BSNavLink>
            </BSNavItem>
        }
        @if (Role.Equals("Moderator"))
        {
            <BSNavItem>
                <BSNavLink Href="/moderator">
                    Panel moderatorski
                </BSNavLink>
            </BSNavItem>
        }
        <BSNavItem>
            <BSNavLink Href="/notes">
                @Email
            </BSNavLink>
        </BSNavItem>
        <BSNavItem>
            <BSNavLink Href="/logout">
                Wyloguj się
            </BSNavLink>
        </BSNavItem>
    </Authorized>
    <NotAuthorized>
        <BSNavItem>
            <BSNavLink Href="register">
                Rejestracja
            </BSNavLink>
        </BSNavItem>
        <BSNavItem>
            <BSNavLink Href="login">
                Logowanie
            </BSNavLink>
        </BSNavItem>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string Email = string.Empty;
    private string Role = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();

        Email = ClaimsParser.Select(authState, "email");
        Role = ClaimsParser.Select(authState, "role");
    }
}