@inject HttpClient Http
@using SharedModels = YourNote.Shared.Models
@using System.Text.Json

<BSCard Class="note" Color="@GetColorAsEnum()" @onclick=@(() => ModalRef.Show())>
    <BSCard CardType="CardType.Header">
        <span class="note__title">
            @NoteObj.Title
        </span>
    </BSCard>
    <BSCard CardType="CardType.Body">
        <BSCard CardType="CardType.Text">
            @NoteObj.Content
        </BSCard>
    </BSCard>
</BSCard>

<BSModal @ref="ModalRef" IsCentered="true" IgnoreClickOnBackdrop="true" IgnoreEscape="true">
    <BSModalHeader OnClick="@(() => ModalRef.Hide())" Class="modal__header">
        <input class="form-control text-light bg-dark modal__title flex-grow-1" @bind="@NoteObj.Title" placeholder="Tytuł"/>
        <NoteDeleter NoteId="@NoteObj.Id" ModalRef="@ModalRef" Notes="@Notes" NotesChanged="@NotesChanged" />
    </BSModalHeader>
    <BSModalBody>
        <div class="modal__inputs">
            <TagField @bind-Tag="@NoteObj.Tag.Name" Tags="@Tags" />
            <LectureField @bind-Lecture="@NoteObj.Lecture.Name" Lectures="@Lectures" />
        </div>
        <textarea rows="10" class="form-control text-light bg-dark modal__content" @bind="@NoteObj.Content" placeholder="Treść notatki..." />
    </BSModalBody>
    <BSModalFooter>
        <BSButton Color="BlazorStrap.Color.Primary" OnClick=@SaveNote IsDisabled="@IsNoteBeingSaved">Wyślij</BSButton>
        <BSButton Color="BlazorStrap.Color.Secondary" OnClick="@(() => ModalRef.Hide())">Anuluj</BSButton>
    </BSModalFooter>
</BSModal>

@code {
    [Parameter]
    public List<SharedModels.Note> Notes { get; set; }

    [Parameter]
    public EventCallback<List<SharedModels.Note>> NotesChanged { get; set; }

    [Parameter]
    public SharedModels.Note NoteObj { get; set; }

    [Parameter]
    public string UserId { get; set; }

    [Parameter]
    public List<string> Tags { get; set; }

    [Parameter]
    public List<string> Lectures { get; set; }

    BSModal ModalRef;
    bool IsNoteBeingSaved = false;

    private BlazorStrap.Color GetColorAsEnum()
    {
        return (BlazorStrap.Color)NoteObj.Color;
    }

    async Task SaveNote()
    {
        IsNoteBeingSaved = true;
        var result = await Http.PutJsonAsync<SharedModels.Note>($"/api/notes/{UserId}", NoteObj);
        IsNoteBeingSaved = false;

        ModalRef.Hide();
    }
}